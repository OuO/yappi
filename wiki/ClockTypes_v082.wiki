#summary yappi clock types

= Clock Types =

Currently, yappi supports two basic clock types used for calculating the timing data: 

  * [http://en.wikipedia.org/wiki/CPU_time CPU Clock]
  * [http://en.wikipedia.org/wiki/Wall_time Wall Clock]

Clock types of yappi can be change via calls to _yappi.set_clock_type()_ API call. 

Let's explain the concept via an example as I believe it is the best way to explain something:

Suppose following code:
{{{
import yappi
import time

def a():
    time.sleep(4.0)

yappi.start()
a()
yappi.get_func_stats().print_all()   
}}}

It prints put following:

{{{
Clock type: cpu
Ordered by: totaltime, desc

name                                    #n         tsub      ttot      tavg
deneme.py:35 a                          1          0.000000  0.000000  0.000000
}}}

??? So, what happened? The answer is that yappi supports CPU clock by default for timing calculations as can be seen in the output:

{{{
Clock type: cpu
}}}

And as _time.sleep()_ is a blocking function(which means it actually block the calling thread, thread usually sleeps in the OS queue), the CPU clock cannot accumulate any timing data for the function a. In fact, there may be some very few CPU cycles involved before actually calling the _time.sleep_, however that kind of precision is not shown in the _print_all()_ output.